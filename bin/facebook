#! /usr/bin/env python3

import os
import os.path
import sys
import datetime
import urllib.request
import xml.dom.minidom


def main():
    url, date = load_config()
    data = string_to_dom(load_http_data(url))
    last_update = get_elem(data, "lastBuildDate")
    if last_update == date: return

    for item in data.getElementsByTagName("item"):
        if time_to_datetime(date) < time_to_datetime(get_elem(item, "pubDate")):
            print(get_elem(item, "pubDate"), get_elem(item, "title"), sep="\n")
        else:
            break

    save_config(url, last_update)

def get_elem(root, query):
    "Shorten the getElementsByTagName thing because it's too long for my taste"
    try: return root.getElementsByTagName(query).item(0).firstChild.data
    except: exit(0) # If this fails, there nothing to find anyways

def time_to_datetime(time_string):
    """
    Takes a string that looks like this:
        Tue, 01 Apr 2014 08:47:28 -0100
    and returns a datetime object
    """
    return datetime.datetime.strptime(time_string, "%a, %d %b %Y %H:%M:%S %z")

def string_to_dom(string):
    "Takes an XML string and turns it into a DOM object"
    return xml.dom.minidom.parseString(string)

def load_http_data(url):
    "Returns the body of the page mentioned in the url"
    try:
        http_data = urllib.request.urlopen(url, capath="/etc/ssl/certs")
        if http_data.status != 200:
            raise Exception(http_data.reason)
    except urllib.error.URLError as e:
        print("Network error: urlopen: %s" % e.reason, file=sys.stderr)
        sys.exit(1)
    except (Exception, socket.gaierror) as e:
        print("Network error: %s" % e, file=sys.stderr)
        sys.exit(1)
    return http_data.read()

def load_config():
    """
    Returns a tuple of (URL, DATE) where url is the url to
    the facebook rss and the date is the date when last checked
    """
    with open(os.path.join(os.getenv("HOME"), ".facebookrss")) as f:
        return f.read().split("\n")[0:2]

def save_config(url, date):
    "Saves the url and date so it can be loaded with load_config()"
    with open(os.path.join(os.getenv("HOME"), ".facebookrss"), "w") as f:
        print("\n".join([url, date]), file=f)

if __name__ == "__main__":
    main()
