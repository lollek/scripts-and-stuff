#! /usr/bin/env perl
# Created 01/01/14
# A very basic wrapper for running a script before a ssh/scp/rsync

# Usage:
# If you want to run "echo hello world" before you ssh to Host google,
# and google looks like this in .ssh/config:
#
# Host google
#   Hostname ssh.google.com
#   User sshuser
#
# you should change it to this
#
# Host google
#   Hostname ssh.google.com
#   User sshuser
#   #!Script echo hello world
#
# Then run it with wrassh <options> google

use strict;
use warnings;

my $prog_name;
my $hostname;

# Check what type of prog we are dealing with
if ($0 =~ /(ssh|mosh)/) {
  $prog_name = $1;
  $hostname = (grep {/^[\w.]+$/} @ARGV)[0];

} elsif ($0 =~ /(scp|rsync)/) {
  $prog_name = $1;
  $hostname = (grep {/^[\w.]+(?=:$)/} @ARGV)[0];

} else {
  die "$0: Bad filename!\n";
}
die "$0: No hostname found\n" unless defined $hostname;

# Find host in .ssh/config and exec any command found
open FILE, "<", <"~/.ssh/config">
  or die "$!\n";

my $do_exec = 0;
while (<FILE>) {
  # #!Script can be in either "Host $hostname" or "Host *"
  if ($_ =~ /^Host\s+(?:$hostname|\*)\s*$/) {
    $do_exec = 1;

  } elsif ($do_exec && $_ =~ /^\s+/) {
    if ($_ =~ /^\s+#!Script\s(.*)$/) {
      system(split(" ", $1));
    }

  } else {
    $do_exec = 0;
  }
}

close(FILE);

exec "$prog_name @ARGV";

